// GENERATED by @edgedb/generate v0.5.3

import * as $ from "../reflection";
import * as _ from "../imports";
import type * as _std from "./std";
export type $EthAddress = $.ScalarType<"std::str", string>;
const EthAddress: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "3c675e7f-49dd-11ef-95ae-91a9fd2b0bf3", _.syntax.literal);

export type $Hash = $.ScalarType<"std::str", string>;
const Hash: $.scalarTypeWithConstructor<_std.$str, never> = $.makeType<$.scalarTypeWithConstructor<_std.$str, never>>(_.spec, "3c6203a7-49dd-11ef-8fcc-b1c4ce79d304", _.syntax.literal);

export type $BlockλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "number": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "timestamp": $.PropertyDesc<_std.$int64, $.Cardinality.AtMostOne, false, false, false, false>;
  "hash": $.PropertyDesc<$Hash, $.Cardinality.One, false, false, false, false>;
  "chain": $.LinkDesc<$Chain, $.Cardinality.One, {}, false, false,  false, false>;
  "<block[is EthEvent]": $.LinkDesc<$EthEvent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<block[is ProductCreated]": $.LinkDesc<$ProductCreated, $.Cardinality.Many, {}, false, false,  false, false>;
  "<block[is OwnershipTransferred]": $.LinkDesc<$OwnershipTransferred, $.Cardinality.Many, {}, false, false,  false, false>;
  "<block[is DeviceActivated]": $.LinkDesc<$DeviceActivated, $.Cardinality.Many, {}, false, false,  false, false>;
  "<block[is DeviceCreated]": $.LinkDesc<$DeviceCreated, $.Cardinality.Many, {}, false, false,  false, false>;
  "<blocks[is Chain]": $.LinkDesc<$Chain, $.Cardinality.Many, {}, false, false,  false, false>;
  "<block": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<blocks": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Block = $.ObjectType<"default::Block", $BlockλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {chain: {__element__: $Chain, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },number: {__element__: _std.$bigint, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Block = $.makeType<$Block>(_.spec, "3c625cdf-49dd-11ef-b714-291dac908785", _.syntax.literal);

const Block: $.$expr_PathNode<$.TypeSet<$Block, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Block, $.Cardinality.Many), null);

export type $ChainλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "name": $.PropertyDesc<_std.$str, $.Cardinality.One, true, false, false, false>;
  "chainId": $.PropertyDesc<_std.$bigint, $.Cardinality.One, true, false, false, false>;
  "fullName": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "blocks": $.LinkDesc<$Block, $.Cardinality.Many, {}, false, true,  false, false>;
  "events": $.LinkDesc<$EthEvent, $.Cardinality.Many, {}, false, true,  false, false>;
  "latestEvent": $.LinkDesc<$EthEvent, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "<chain[is Block]": $.LinkDesc<$Block, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain[is EthEvent]": $.LinkDesc<$EthEvent, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain[is ProductCreated]": $.LinkDesc<$ProductCreated, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain[is OwnershipTransferred]": $.LinkDesc<$OwnershipTransferred, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain[is DeviceActivated]": $.LinkDesc<$DeviceActivated, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain[is DeviceCreated]": $.LinkDesc<$DeviceCreated, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain[is ProductFactory]": $.LinkDesc<$ProductFactory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<chain": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Chain = $.ObjectType<"default::Chain", $ChainλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {chainId: {__element__: _std.$bigint, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
  {name: {__element__: _std.$str, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Chain = $.makeType<$Chain>(_.spec, "3c6366c1-49dd-11ef-b377-e369136af29c", _.syntax.literal);

const Chain: $.$expr_PathNode<$.TypeSet<$Chain, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Chain, $.Cardinality.Many), null);

export type $DeviceλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "activateEvent": $.LinkDesc<$EthEvent, $.Cardinality.AtMostOne, {}, false, false,  false, false>;
  "address": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "owner": $.PropertyDesc<$EthAddress, $.Cardinality.AtMostOne, false, false, false, false>;
  "createEvent": $.LinkDesc<$EthEvent, $.Cardinality.One, {}, false, false,  false, false>;
  "tokenId": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "product": $.LinkDesc<$Product, $.Cardinality.One, {}, false, false,  false, false>;
  "<devices[is Product]": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<devices": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Device = $.ObjectType<"default::Device", $DeviceλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
]>;
const $Device = $.makeType<$Device>(_.spec, "3c8fb55e-49dd-11ef-ae7b-cb45a3900e51", _.syntax.literal);

const Device: $.$expr_PathNode<$.TypeSet<$Device, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Device, $.Cardinality.Many), null);

export type $EthEventλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "chain": $.LinkDesc<$Chain, $.Cardinality.One, {}, false, false,  false, false>;
  "blockNumber": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "block": $.LinkDesc<$Block, $.Cardinality.AtMostOne, {}, false, true,  false, false>;
  "address": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "blockHash": $.PropertyDesc<$Hash, $.Cardinality.One, false, false, false, false>;
  "logIndex": $.PropertyDesc<_std.$int32, $.Cardinality.One, false, false, false, false>;
  "txHash": $.PropertyDesc<$Hash, $.Cardinality.One, false, false, false, false>;
  "<events[is Chain]": $.LinkDesc<$Chain, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestEvent[is Chain]": $.LinkDesc<$Chain, $.Cardinality.Many, {}, false, false,  false, false>;
  "<activateEvent[is Device]": $.LinkDesc<$Device, $.Cardinality.Many, {}, false, false,  false, false>;
  "<createEvent[is Device]": $.LinkDesc<$Device, $.Cardinality.Many, {}, false, false,  false, false>;
  "<createEvent[is Product]": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<activateEvent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<createEvent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<events": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<latestEvent": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $EthEvent = $.ObjectType<"default::EthEvent", $EthEventλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {chain: {__element__: $Chain, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },blockNumber: {__element__: _std.$bigint, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },logIndex: {__element__: _std.$int32, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $EthEvent = $.makeType<$EthEvent>(_.spec, "3c67adbb-49dd-11ef-946c-2b6f15fc1722", _.syntax.literal);

const EthEvent: $.$expr_PathNode<$.TypeSet<$EthEvent, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($EthEvent, $.Cardinality.Many), null);

export type $DeviceActivatedλShape = $.typeutil.flatten<$EthEventλShape & {
  "device": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "product": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "receiver": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
}>;
type $DeviceActivated = $.ObjectType<"default::DeviceActivated", $DeviceActivatedλShape, null, [
  ...$EthEvent['__exclusives__'],
]>;
const $DeviceActivated = $.makeType<$DeviceActivated>(_.spec, "3c7d0265-49dd-11ef-a4a5-8b33a1f295a4", _.syntax.literal);

const DeviceActivated: $.$expr_PathNode<$.TypeSet<$DeviceActivated, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($DeviceActivated, $.Cardinality.Many), null);

export type $DeviceCreatedλShape = $.typeutil.flatten<$EthEventλShape & {
  "device": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "product": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "tokenId": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
}>;
type $DeviceCreated = $.ObjectType<"default::DeviceCreated", $DeviceCreatedλShape, null, [
  ...$EthEvent['__exclusives__'],
]>;
const $DeviceCreated = $.makeType<$DeviceCreated>(_.spec, "3c83cb34-49dd-11ef-845a-6372fa26ce9f", _.syntax.literal);

const DeviceCreated: $.$expr_PathNode<$.TypeSet<$DeviceCreated, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($DeviceCreated, $.Cardinality.Many), null);

export type $OwnershipTransferredλShape = $.typeutil.flatten<$EthEventλShape & {
  "newOwner": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "previousOwner": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
}>;
type $OwnershipTransferred = $.ObjectType<"default::OwnershipTransferred", $OwnershipTransferredλShape, null, [
  ...$EthEvent['__exclusives__'],
]>;
const $OwnershipTransferred = $.makeType<$OwnershipTransferred>(_.spec, "3c768ac7-49dd-11ef-a57b-ad53b1d031dc", _.syntax.literal);

const OwnershipTransferred: $.$expr_PathNode<$.TypeSet<$OwnershipTransferred, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($OwnershipTransferred, $.Cardinality.Many), null);

export type $ProductλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "address": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "createEvent": $.LinkDesc<$EthEvent, $.Cardinality.One, {}, false, false,  false, false>;
  "impl": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "vendor": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "name": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "symbol": $.PropertyDesc<_std.$str, $.Cardinality.AtMostOne, false, false, false, false>;
  "factory": $.LinkDesc<$ProductFactory, $.Cardinality.One, {}, false, false,  false, false>;
  "devices": $.LinkDesc<$Device, $.Cardinality.Many, {}, false, true,  false, false>;
  "<product[is Device]": $.LinkDesc<$Device, $.Cardinality.Many, {}, false, false,  false, false>;
  "<products[is ProductFactory]": $.LinkDesc<$ProductFactory, $.Cardinality.Many, {}, false, false,  false, false>;
  "<product": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
  "<products": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $Product = $.ObjectType<"default::Product", $ProductλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {factory: {__element__: $ProductFactory, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $EthAddress, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $Product = $.makeType<$Product>(_.spec, "3c917811-49dd-11ef-a0ad-c71d1feabc80", _.syntax.literal);

const Product: $.$expr_PathNode<$.TypeSet<$Product, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($Product, $.Cardinality.Many), null);

export type $ProductCreatedλShape = $.typeutil.flatten<$EthEventλShape & {
  "product": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "productImpl": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "vendor": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
}>;
type $ProductCreated = $.ObjectType<"default::ProductCreated", $ProductCreatedλShape, null, [
  ...$EthEvent['__exclusives__'],
]>;
const $ProductCreated = $.makeType<$ProductCreated>(_.spec, "3c6ffbb4-49dd-11ef-b2ca-5d9d318c3460", _.syntax.literal);

const ProductCreated: $.$expr_PathNode<$.TypeSet<$ProductCreated, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ProductCreated, $.Cardinality.Many), null);

export type $ProductFactoryλShape = $.typeutil.flatten<_std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588λShape & {
  "chain": $.LinkDesc<$Chain, $.Cardinality.One, {}, false, false,  false, false>;
  "address": $.PropertyDesc<$EthAddress, $.Cardinality.One, false, false, false, false>;
  "owner": $.PropertyDesc<$EthAddress, $.Cardinality.AtMostOne, false, false, false, false>;
  "createdAt": $.PropertyDesc<_std.$bigint, $.Cardinality.One, false, false, false, false>;
  "products": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, true,  false, false>;
  "<factory[is Product]": $.LinkDesc<$Product, $.Cardinality.Many, {}, false, false,  false, false>;
  "<factory": $.LinkDesc<$.ObjectType, $.Cardinality.Many, {}, false, false,  false, false>;
}>;
type $ProductFactory = $.ObjectType<"default::ProductFactory", $ProductFactoryλShape, null, [
  ..._std.$Object_8ce8c71ee4fa5f73840c22d7eaa58588['__exclusives__'],
  {chain: {__element__: $Chain, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },address: {__element__: $EthAddress, __cardinality__: $.Cardinality.One | $.Cardinality.AtMostOne },},
]>;
const $ProductFactory = $.makeType<$ProductFactory>(_.spec, "3c93d07d-49dd-11ef-88f9-3d73f476938f", _.syntax.literal);

const ProductFactory: $.$expr_PathNode<$.TypeSet<$ProductFactory, $.Cardinality.Many>, null> = _.syntax.$PathNode($.$toSet($ProductFactory, $.Cardinality.Many), null);



export { EthAddress, Hash, $Block, Block, $Chain, Chain, $Device, Device, $EthEvent, EthEvent, $DeviceActivated, DeviceActivated, $DeviceCreated, DeviceCreated, $OwnershipTransferred, OwnershipTransferred, $Product, Product, $ProductCreated, ProductCreated, $ProductFactory, ProductFactory };

type __defaultExports = {
  "EthAddress": typeof EthAddress;
  "Hash": typeof Hash;
  "Block": typeof Block;
  "Chain": typeof Chain;
  "Device": typeof Device;
  "EthEvent": typeof EthEvent;
  "DeviceActivated": typeof DeviceActivated;
  "DeviceCreated": typeof DeviceCreated;
  "OwnershipTransferred": typeof OwnershipTransferred;
  "Product": typeof Product;
  "ProductCreated": typeof ProductCreated;
  "ProductFactory": typeof ProductFactory
};
const __defaultExports: __defaultExports = {
  "EthAddress": EthAddress,
  "Hash": Hash,
  "Block": Block,
  "Chain": Chain,
  "Device": Device,
  "EthEvent": EthEvent,
  "DeviceActivated": DeviceActivated,
  "DeviceCreated": DeviceCreated,
  "OwnershipTransferred": OwnershipTransferred,
  "Product": Product,
  "ProductCreated": ProductCreated,
  "ProductFactory": ProductFactory
};
export default __defaultExports;
