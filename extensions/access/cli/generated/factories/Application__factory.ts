/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Application, ApplicationInterface } from "../Application";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PRODUCT_FACTORY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IProductFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
      {
        name: "authorizationId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAuthorizationsByDevice",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeviceBinding",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "product",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeviceByAuthorizationId",
    inputs: [
      {
        name: "authorizationId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "productFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAccessible",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenByIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOfOwnerByIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyAuthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721EnumerableForbiddenBatchMint",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721IncorrectOwner",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InsufficientApproval",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721NonexistentToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721OutOfBoundsIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "NotProductDeviceOwner",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611fe5806100d96000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637741139f116100c3578063c1898c181161007c578063c1898c1814610304578063c87b56dd14610317578063e985e9c51461032a578063e9fe01551461033d578063ee1fe2ad14610366578063f4ba474a1461037957600080fd5b80637741139f1461027e57806390657147146102b057806395d89b41146102c35780639dc29fac146102cb578063a22cb465146102de578063b88d4fde146102f157600080fd5b80632f745c59116101155780632f745c591461020c57806342842e0e1461021f5780634f6ccce7146102325780636352211e1461024557806363ca2ffe1461025857806370a082311461026b57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da57806323b872dd146101f9575b600080fd5b61017061016b36600461190f565b610399565b60405190151581526020015b60405180910390f35b61018d6103c4565b60405161017c919061197c565b6101ad6101a836600461198f565b610468565b6040516001600160a01b03909116815260200161017c565b6101d86101d33660046119bd565b61047d565b005b600080516020611f90833981519152545b60405190815260200161017c565b6101d86102073660046119e9565b61048c565b6101eb61021a3660046119bd565b61051c565b6101d861022d3660046119e9565b610590565b6101eb61024036600461198f565b6105b0565b6101ad61025336600461198f565b610628565b6000546101ad906001600160a01b031681565b6101eb610279366004611a2a565b610633565b61029161028c366004611a2a565b61068f565b604080516001600160a01b03909316835260208301919091520161017c565b6101d86102be366004611af7565b610713565b61018d610845565b6101d86102d93660046119bd565b610884565b6101d86102ec366004611b72565b610a19565b6101d86102ff366004611bb0565b610a24565b610170610312366004611c30565b610a3b565b61018d61032536600461198f565b610adc565b610170610338366004611c30565b610b51565b6101ad61034b36600461198f565b6000908152600360205260409020546001600160a01b031690565b6101eb610374366004611c30565b610b9e565b61038c610387366004611a2a565b610d29565b60405161017c9190611c5e565b60006001600160e01b0319821663241a6aef60e11b14806103be57506103be82610d95565b92915050565b600080516020611f7083398151915280546060919081906103e490611ca1565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611ca1565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b505050505091505090565b600061047382610dba565b506103be82610df2565b610488828233610e2c565b5050565b6001600160a01b0382166104bb57604051633250574960e11b8152600060048201526024015b60405180910390fd5b60006104c8838333610e39565b9050836001600160a01b0316816001600160a01b031614610516576040516364283d7b60e01b81526001600160a01b03808616600483015260248201849052821660448201526064016104b2565b50505050565b6000600080516020611f5083398151915261053684610633565b83106105675760405163295f44f760e21b81526001600160a01b0385166004820152602481018490526044016104b2565b6001600160a01b0384166000908152602091825260408082208583529092522054905092915050565b6105ab83838360405180602001604052806000815250610a24565b505050565b6000600080516020611f508339815191526105d7600080516020611f908339815191525490565b83106106005760405163295f44f760e21b815260006004820152602481018490526044016104b2565b80600201838154811061061557610615611cdb565b9060005260206000200154915050919050565b60006103be82610dba565b6000600080516020611f708339815191526001600160a01b03831661066e576040516322718ad960e21b8152600060048201526024016104b2565b6001600160a01b039092166000908152600390920160205250604090205490565b60008054604051637741139f60e01b81526001600160a01b03848116600483015283928392911690637741139f906024016040805180830381865afa1580156106dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107009190611cf1565b8051602090910151909590945092505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156107595750825b905060008267ffffffffffffffff1660011480156107765750303b155b905081158015610784575080155b156107a25760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156107cc57845460ff60401b1916600160401b1785555b600080546001600160a01b0319166001600160a01b038a161790556107f18787610f3a565b60018055831561083b57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793018054606091600080516020611f70833981519152916103e490611ca1565b816000806108918361068f565b6040516331a9108f60e11b815260048101829052919350915033906001600160a01b03841690636352211e90602401602060405180830381865afa1580156108dd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109019190611d4b565b6001600160a01b03161461092857604051638b85aa6960e01b815260040160405180910390fd5b61093184610f4c565b6001600160a01b0385166000908152600260205260408120905b81548110156109f5578582828154811061096757610967611cdb565b9060005260206000200154036109ed578154829061098790600190611d7e565b8154811061099757610997611cdb565b90600052602060002001548282815481106109b4576109b4611cdb565b9060005260206000200181905550818054806109d2576109d2611d91565b600190038181906000526020600020016000905590556109f5565b60010161094b565b5050506000928352505060036020526040902080546001600160a01b031916905550565b610488338383610f87565b610a2f84848461048c565b61051684848484611038565b6000805b6001600160a01b038416600090815260026020526040902054811015610ad257826001600160a01b0316610ab260026000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610aa257610aa2611cdb565b9060005260206000200154611161565b6001600160a01b031603610aca5760019150506103be565b600101610a3f565b5060009392505050565b6060610ae782610dba565b506000610aff60408051602081019091526000815290565b90506000815111610b1f5760405180602001604052806000815250610b4a565b80610b298461119b565b604051602001610b3a929190611da7565b6040516020818303038152906040525b9392505050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b600081600080610bad8361068f565b6040516331a9108f60e11b815260048101829052919350915033906001600160a01b03841690636352211e90602401602060405180830381865afa158015610bf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1d9190611d4b565b6001600160a01b031614610c4457604051638b85aa6960e01b815260040160405180910390fd5b6000610c4f87610633565b905060005b81811015610cb357866001600160a01b031660036000610c73846105b0565b81526020810191909152604001600020546001600160a01b031603610cab57604051633013e93f60e11b815260040160405180910390fd5b600101610c54565b506001805460009182610cc583611dd6565b919050559050610cd5888261122e565b6001600160a01b03871660008181526002602090815260408083208054600181018255908452828420018590558483526003909152902080546001600160a01b031916909117905594505050505092915050565b6001600160a01b038116600090815260026020908152604091829020805483518184028101840190945280845260609392830182828015610d8957602002820191906000526020600020905b815481526020019060010190808311610d75575b50505050509050919050565b60006001600160e01b0319821663780e9d6360e01b14806103be57506103be82611293565b600080610dc683611161565b90506001600160a01b0381166103be57604051637e27328960e01b8152600481018490526024016104b2565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b6105ab83838360016112e3565b600080610e478585856113f9565b90506001600160a01b038116610ed057610ecb84600080516020611f90833981519152805460008381527f645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0360205260408120829055600182018355919091527fa42f15e5d656f8155fd7419d740a6073999f19cd6e061449ce4a257150545bf20155565b610ef3565b846001600160a01b0316816001600160a01b031614610ef357610ef38185611503565b6001600160a01b038516610f0f57610f0a846115a7565b610f32565b846001600160a01b0316816001600160a01b031614610f3257610f32858561167e565b949350505050565b610f426116d9565b6104888282611724565b6000610f5b6000836000610e39565b90506001600160a01b03811661048857604051637e27328960e01b8152600481018390526024016104b2565b600080516020611f708339815191526001600160a01b038316610fc857604051630b61174360e31b81526001600160a01b03841660048201526024016104b2565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b1561051657604051630a85bd0160e11b81526001600160a01b0384169063150b7a029061107a903390889087908790600401611def565b6020604051808303816000875af19250505080156110b5575060408051601f3d908101601f191682019092526110b291810190611e2c565b60015b61111e573d8080156110e3576040519150601f19603f3d011682016040523d82523d6000602084013e6110e8565b606091505b50805160000361111657604051633250574960e11b81526001600160a01b03851660048201526024016104b2565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461115a57604051633250574960e11b81526001600160a01b03851660048201526024016104b2565b5050505050565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b606060006111a883611755565b600101905060008167ffffffffffffffff8111156111c8576111c8611a47565b6040519080825280601f01601f1916602001820160405280156111f2576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a85049450846111fc57509392505050565b6001600160a01b03821661125857604051633250574960e11b8152600060048201526024016104b2565b600061126683836000610e39565b90506001600160a01b038116156105ab576040516339e3563760e11b8152600060048201526024016104b2565b60006001600160e01b031982166380ac58cd60e01b14806112c457506001600160e01b03198216635b5e139f60e01b145b806103be57506301ffc9a760e01b6001600160e01b03198316146103be565b600080516020611f70833981519152818061130657506001600160a01b03831615155b156113c857600061131685610dba565b90506001600160a01b038416158015906113425750836001600160a01b0316816001600160a01b031614155b801561135557506113538185610b51565b155b1561137e5760405163a9fbf51f60e01b81526001600160a01b03851660048201526024016104b2565b82156113c65784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000600080516020611f708339815191528161141485611161565b90506001600160a01b038416156114305761143081858761182d565b6001600160a01b038116156114705761144d6000866000806112e3565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b038616156114a1576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b600080516020611f50833981519152600061151d84610633565b6000848152600184016020526040902054909150808214611572576001600160a01b03851660009081526020848152604080832085845282528083205484845281842081905583526001860190915290208190555b50600092835260018201602090815260408085208590556001600160a01b039095168452918252838320908352905290812055565b600080516020611f9083398151915254600080516020611f50833981519152906000906115d690600190611d7e565b600084815260038401602052604081205460028501805493945090928490811061160257611602611cdb565b906000526020600020015490508084600201838154811061162557611625611cdb565b60009182526020808320909101929092558281526003860190915260408082208490558682528120556002840180548061166157611661611d91565b600190038181906000526020600020016000905590555050505050565b600080516020611f508339815191526000600161169a85610633565b6116a49190611d7e565b6001600160a01b0390941660009081526020838152604080832087845282528083208690559482526001909301909252502055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661172257604051631afcd79f60e31b815260040160405180910390fd5b565b61172c6116d9565b600080516020611f70833981519152806117468482611e90565b50600181016105168382611e90565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106117945772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef810000000083106117c0576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc1000083106117de57662386f26fc10000830492506010015b6305f5e10083106117f6576305f5e100830492506008015b612710831061180a57612710830492506004015b6064831061181c576064830492506002015b600a83106103be5760010192915050565b611838838383611891565b6105ab576001600160a01b03831661186657604051637e27328960e01b8152600481018290526024016104b2565b60405163177e802f60e01b81526001600160a01b0383166004820152602481018290526044016104b2565b60006001600160a01b03831615801590610f325750826001600160a01b0316846001600160a01b031614806118cb57506118cb8484610b51565b80610f325750826001600160a01b03166118e483610df2565b6001600160a01b031614949350505050565b6001600160e01b03198116811461190c57600080fd5b50565b60006020828403121561192157600080fd5b8135610b4a816118f6565b60005b8381101561194757818101518382015260200161192f565b50506000910152565b6000815180845261196881602086016020860161192c565b601f01601f19169290920160200192915050565b602081526000610b4a6020830184611950565b6000602082840312156119a157600080fd5b5035919050565b6001600160a01b038116811461190c57600080fd5b600080604083850312156119d057600080fd5b82356119db816119a8565b946020939093013593505050565b6000806000606084860312156119fe57600080fd5b8335611a09816119a8565b92506020840135611a19816119a8565b929592945050506040919091013590565b600060208284031215611a3c57600080fd5b8135610b4a816119a8565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff841115611a7857611a78611a47565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff82111715611aa757611aa7611a47565b604052838152905080828401851015611abf57600080fd5b83836020830137600060208583010152509392505050565b600082601f830112611ae857600080fd5b610b4a83833560208501611a5d565b600080600060608486031215611b0c57600080fd5b8335611b17816119a8565b9250602084013567ffffffffffffffff811115611b3357600080fd5b611b3f86828701611ad7565b925050604084013567ffffffffffffffff811115611b5c57600080fd5b611b6886828701611ad7565b9150509250925092565b60008060408385031215611b8557600080fd5b8235611b90816119a8565b915060208301358015158114611ba557600080fd5b809150509250929050565b60008060008060808587031215611bc657600080fd5b8435611bd1816119a8565b93506020850135611be1816119a8565b925060408501359150606085013567ffffffffffffffff811115611c0457600080fd5b8501601f81018713611c1557600080fd5b611c2487823560208401611a5d565b91505092959194509250565b60008060408385031215611c4357600080fd5b8235611c4e816119a8565b91506020830135611ba5816119a8565b602080825282518282018190526000918401906040840190835b81811015611c96578351835260209384019390920191600101611c78565b509095945050505050565b600181811c90821680611cb557607f821691505b602082108103611cd557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b60006040828403128015611d0457600080fd5b506040805190810167ffffffffffffffff81118282101715611d2857611d28611a47565b6040528251611d36816119a8565b81526020928301519281019290925250919050565b600060208284031215611d5d57600080fd5b8151610b4a816119a8565b634e487b7160e01b600052601160045260246000fd5b818103818111156103be576103be611d68565b634e487b7160e01b600052603160045260246000fd5b60008351611db981846020880161192c565b835190830190611dcd81836020880161192c565b01949350505050565b600060018201611de857611de8611d68565b5060010190565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e2290830184611950565b9695505050505050565b600060208284031215611e3e57600080fd5b8151610b4a816118f6565b601f8211156105ab57806000526020600020601f840160051c81016020851015611e705750805b601f840160051c820191505b8181101561115a5760008155600101611e7c565b815167ffffffffffffffff811115611eaa57611eaa611a47565b611ebe81611eb88454611ca1565b84611e49565b6020601f821160018114611ef25760008315611eda5750848201515b600019600385901b1c1916600184901b17845561115a565b600084815260208120601f198516915b82811015611f225787850151825560209485019460019092019101611f02565b5084821015611f405786840151600019600387901b60f8161c191681555b50505050600190811b0190555056fe645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed02a264697066735822122000c7825cee76ff27a84dc3b5f5a35410f4cf4bef73aa873c61be85ebcf50e9d364736f6c634300081a0033";

type ApplicationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApplicationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Application__factory extends ContractFactory {
  constructor(...args: ApplicationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Application> {
    return super.deploy(overrides || {}) as Promise<Application>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Application {
    return super.attach(address) as Application;
  }
  override connect(signer: Signer): Application__factory {
    return super.connect(signer) as Application__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApplicationInterface {
    return new utils.Interface(_abi) as ApplicationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Application {
    return new Contract(address, _abi, signerOrProvider) as Application;
  }
}
