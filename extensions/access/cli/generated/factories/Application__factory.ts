/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Application, ApplicationInterface } from "../Application";

const _abi = [
  {
    type: "constructor",
    inputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "PRODUCT_FACTORY",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IProductFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "burn",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
      {
        name: "accessId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "getAccessesByDevice",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256[]",
        internalType: "uint256[]",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeviceBinding",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "product",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getDeviceByAccessId",
    inputs: [
      {
        name: "accessId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "productFactory",
        type: "address",
        internalType: "address",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isAccessible",
    inputs: [
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
      {
        name: "user",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
      {
        name: "accessURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenByIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOfOwnerByIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "accessId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AlreadyAccessible",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721EnumerableForbiddenBatchMint",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721IncorrectOwner",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InsufficientApproval",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721NonexistentToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721OutOfBoundsIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "NotProductDeviceOwner",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506016601a565b60ca565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff161560695760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b039081161460c75780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b611f38806100d96000396000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806370a08231116100c3578063b88d4fde1161007c578063b88d4fde14610304578063c1898c1814610317578063c87b56dd1461032a578063d0ed78511461033d578063d55c132514610366578063e985e9c51461038657600080fd5b806370a082311461027e5780637741139f1461029157806390657147146102c357806395d89b41146102d65780639dc29fac146102de578063a22cb465146102f157600080fd5b806323b872dd1161011557806323b872dd1461020c5780632f745c591461021f57806342842e0e146102325780634f6ccce7146102455780636352211e1461025857806363ca2ffe1461026b57600080fd5b806301ffc9a71461015d57806306fdde0314610185578063081812fc1461019a578063095ea7b3146101c557806318160ddd146101da578063221375a6146101f9575b600080fd5b61017061016b366004611848565b610399565b60405190151581526020015b60405180910390f35b61018d6103c4565b60405161017c91906118b2565b6101ad6101a83660046118c5565b610468565b6040516001600160a01b03909116815260200161017c565b6101d86101d33660046118f3565b61047d565b005b600080516020611ee3833981519152545b60405190815260200161017c565b6101eb6102073660046119cf565b61048c565b6101d861021a366004611a31565b610628565b6101eb61022d3660046118f3565b6106b8565b6101d8610240366004611a31565b61072c565b6101eb6102533660046118c5565b61074c565b6101ad6102663660046118c5565b6107c4565b6000546101ad906001600160a01b031681565b6101eb61028c366004611a72565b6107cf565b6102a461029f366004611a72565b61082b565b604080516001600160a01b03909316835260208301919091520161017c565b6101d86102d1366004611a8f565b6108af565b61018d6109e1565b6101d86102ec3660046118f3565b610a20565b6101d86102ff366004611af4565b610bc9565b6101d8610312366004611b32565b610bd4565b610170610325366004611bb2565b610beb565b61018d6103383660046118c5565b610c8c565b6101ad61034b3660046118c5565b6000908152600360205260409020546001600160a01b031690565b610379610374366004611a72565b610d2e565b60405161017c9190611be0565b610170610394366004611bb2565b610d99565b60006001600160e01b03198216634e66b7df60e11b14806103be57506103be82610de6565b92915050565b600080516020611ec383398151915280546060919081906103e490611c23565b80601f016020809104026020016040519081016040528092919081815260200182805461041090611c23565b801561045d5780601f106104325761010080835404028352916020019161045d565b820191906000526020600020905b81548152906001019060200180831161044057829003601f168201915b505050505091505090565b600061047382610e0b565b506103be82610e43565b610488828233610e7d565b5050565b60008260008061049b8361082b565b6040516331a9108f60e11b815260048101829052919350915033906001600160a01b03841690636352211e90602401602060405180830381865afa1580156104e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061050b9190611c5d565b6001600160a01b03161461053257604051638b85aa6960e01b815260040160405180910390fd5b600061053d886107cf565b905060005b818110156105a157876001600160a01b0316600360006105618461074c565b81526020810191909152604001600020546001600160a01b0316036105995760405163226ebb0760e21b815260040160405180910390fd5b600101610542565b5060018054600091826105b383611c90565b9190505590506105c38982610e8a565b6001600160a01b03881660008181526002602090815260408083208054600181018255908452828420018590558483526003825280832080546001600160a01b031916909417909355600490522061061b8882611cf0565b5098975050505050505050565b6001600160a01b03821661065757604051633250574960e11b8152600060048201526024015b60405180910390fd5b6000610664838333610eef565b9050836001600160a01b0316816001600160a01b0316146106b2576040516364283d7b60e01b81526001600160a01b038086166004830152602482018490528216604482015260640161064e565b50505050565b6000600080516020611ea38339815191526106d2846107cf565b83106107035760405163295f44f760e21b81526001600160a01b03851660048201526024810184905260440161064e565b6001600160a01b0384166000908152602091825260408082208583529092522054905092915050565b61074783838360405180602001604052806000815250610bd4565b505050565b6000600080516020611ea3833981519152610773600080516020611ee38339815191525490565b831061079c5760405163295f44f760e21b8152600060048201526024810184905260440161064e565b8060020183815481106107b1576107b1611daf565b9060005260206000200154915050919050565b60006103be82610e0b565b6000600080516020611ec38339815191526001600160a01b03831661080a576040516322718ad960e21b81526000600482015260240161064e565b6001600160a01b039092166000908152600390920160205250604090205490565b60008054604051637741139f60e01b81526001600160a01b03848116600483015283928392911690637741139f906024016040805180830381865afa158015610878573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089c9190611dc5565b8051602090910151909590945092505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff166000811580156108f55750825b905060008267ffffffffffffffff1660011480156109125750303b155b905081158015610920575080155b1561093e5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561096857845460ff60401b1916600160401b1785555b600080546001600160a01b0319166001600160a01b038a1617905561098d8787610ff0565b6001805583156109d757845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b7f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793018054606091600080516020611ec3833981519152916103e490611c23565b81600080610a2d8361082b565b6040516331a9108f60e11b815260048101829052919350915033906001600160a01b03841690636352211e90602401602060405180830381865afa158015610a79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9d9190611c5d565b6001600160a01b031614610ac457604051638b85aa6960e01b815260040160405180910390fd5b610acd84611002565b6001600160a01b0385166000908152600260205260408120905b8154811015610b915785828281548110610b0357610b03611daf565b906000526020600020015403610b895781548290610b2390600190611e1f565b81548110610b3357610b33611daf565b9060005260206000200154828281548110610b5057610b50611daf565b906000526020600020018190555081805480610b6e57610b6e611e32565b60019003818190600052602060002001600090559055610b91565b600101610ae7565b50600085815260036020908152604080832080546001600160a01b031916905560049091528120610bc1916117dc565b505050505050565b61048833838361103d565b610bdf848484610628565b6106b2848484846110ee565b6000805b6001600160a01b038416600090815260026020526040902054811015610c8257826001600160a01b0316610c6260026000876001600160a01b03166001600160a01b031681526020019081526020016000208381548110610c5257610c52611daf565b9060005260206000200154611217565b6001600160a01b031603610c7a5760019150506103be565b600101610bef565b5060009392505050565b6000818152600460205260409020805460609190610ca990611c23565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd590611c23565b8015610d225780601f10610cf757610100808354040283529160200191610d22565b820191906000526020600020905b815481529060010190602001808311610d0557829003601f168201915b50505050509050919050565b6001600160a01b038116600090815260026020908152604091829020805483518184028101840190945280845260609392830182828015610d2257602002820191906000526020600020905b815481526020019060010190808311610d7a5750505050509050919050565b6001600160a01b0391821660009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020908152604080832093909416825291909152205460ff1690565b60006001600160e01b0319821663780e9d6360e01b14806103be57506103be82611251565b600080610e1783611217565b90506001600160a01b0381166103be57604051637e27328960e01b81526004810184905260240161064e565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b61074783838360016112a1565b6001600160a01b038216610eb457604051633250574960e11b81526000600482015260240161064e565b6000610ec283836000610eef565b90506001600160a01b03811615610747576040516339e3563760e11b81526000600482015260240161064e565b600080610efd8585856113b7565b90506001600160a01b038116610f8657610f8184600080516020611ee3833981519152805460008381527f645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0360205260408120829055600182018355919091527fa42f15e5d656f8155fd7419d740a6073999f19cd6e061449ce4a257150545bf20155565b610fa9565b846001600160a01b0316816001600160a01b031614610fa957610fa981856114c1565b6001600160a01b038516610fc557610fc084611565565b610fe8565b846001600160a01b0316816001600160a01b031614610fe857610fe8858561163c565b949350505050565b610ff8611697565b61048882826116e2565b60006110116000836000610eef565b90506001600160a01b03811661048857604051637e27328960e01b81526004810183905260240161064e565b600080516020611ec38339815191526001600160a01b03831661107e57604051630b61174360e31b81526001600160a01b038416600482015260240161064e565b6001600160a01b038481166000818152600584016020908152604080832094881680845294825291829020805460ff191687151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a350505050565b6001600160a01b0383163b156106b257604051630a85bd0160e11b81526001600160a01b0384169063150b7a0290611130903390889087908790600401611e48565b6020604051808303816000875af192505050801561116b575060408051601f3d908101601f1916820190925261116891810190611e85565b60015b6111d4573d808015611199576040519150601f19603f3d011682016040523d82523d6000602084013e61119e565b606091505b5080516000036111cc57604051633250574960e11b81526001600160a01b038516600482015260240161064e565b805181602001fd5b6001600160e01b03198116630a85bd0160e11b1461121057604051633250574960e11b81526001600160a01b038516600482015260240161064e565b5050505050565b60009081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b60006001600160e01b031982166380ac58cd60e01b148061128257506001600160e01b03198216635b5e139f60e01b145b806103be57506301ffc9a760e01b6001600160e01b03198316146103be565b600080516020611ec383398151915281806112c457506001600160a01b03831615155b156113865760006112d485610e0b565b90506001600160a01b038416158015906113005750836001600160a01b0316816001600160a01b031614155b801561131357506113118185610d99565b155b1561133c5760405163a9fbf51f60e01b81526001600160a01b038516600482015260240161064e565b82156113845784866001600160a01b0316826001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b600093845260040160205250506040902080546001600160a01b0319166001600160a01b0392909216919091179055565b6000600080516020611ec3833981519152816113d285611217565b90506001600160a01b038416156113ee576113ee818587611713565b6001600160a01b0381161561142e5761140b6000866000806112a1565b6001600160a01b0381166000908152600383016020526040902080546000190190555b6001600160a01b0386161561145f576001600160a01b03861660009081526003830160205260409020805460010190555b600085815260028301602052604080822080546001600160a01b0319166001600160a01b038a811691821790925591518893918516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a495945050505050565b600080516020611ea383398151915260006114db846107cf565b6000848152600184016020526040902054909150808214611530576001600160a01b03851660009081526020848152604080832085845282528083205484845281842081905583526001860190915290208190555b50600092835260018201602090815260408085208590556001600160a01b039095168452918252838320908352905290812055565b600080516020611ee383398151915254600080516020611ea38339815191529060009061159490600190611e1f565b60008481526003840160205260408120546002850180549394509092849081106115c0576115c0611daf565b90600052602060002001549050808460020183815481106115e3576115e3611daf565b60009182526020808320909101929092558281526003860190915260408082208490558682528120556002840180548061161f5761161f611e32565b600190038181906000526020600020016000905590555050505050565b600080516020611ea383398151915260006001611658856107cf565b6116629190611e1f565b6001600160a01b0390941660009081526020838152604080832087845282528083208690559482526001909301909252502055565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166116e057604051631afcd79f60e31b815260040160405180910390fd5b565b6116ea611697565b600080516020611ec3833981519152806117048482611cf0565b50600181016106b28382611cf0565b61171e838383611777565b610747576001600160a01b03831661174c57604051637e27328960e01b81526004810182905260240161064e565b60405163177e802f60e01b81526001600160a01b03831660048201526024810182905260440161064e565b60006001600160a01b03831615801590610fe85750826001600160a01b0316846001600160a01b031614806117b157506117b18484610d99565b80610fe85750826001600160a01b03166117ca83610e43565b6001600160a01b031614949350505050565b5080546117e890611c23565b6000825580601f106117f8575050565b601f0160209004906000526020600020908101906118169190611819565b50565b5b8082111561182e576000815560010161181a565b5090565b6001600160e01b03198116811461181657600080fd5b60006020828403121561185a57600080fd5b813561186581611832565b9392505050565b6000815180845260005b8181101561189257602081850181015186830182015201611876565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000611865602083018461186c565b6000602082840312156118d757600080fd5b5035919050565b6001600160a01b038116811461181657600080fd5b6000806040838503121561190657600080fd5b8235611911816118de565b946020939093013593505050565b634e487b7160e01b600052604160045260246000fd5b60008067ffffffffffffffff8411156119505761195061191f565b50604051601f19601f85018116603f0116810181811067ffffffffffffffff8211171561197f5761197f61191f565b60405283815290508082840185101561199757600080fd5b83836020830137600060208583010152509392505050565b600082601f8301126119c057600080fd5b61186583833560208501611935565b6000806000606084860312156119e457600080fd5b83356119ef816118de565b925060208401356119ff816118de565b9150604084013567ffffffffffffffff811115611a1b57600080fd5b611a27868287016119af565b9150509250925092565b600080600060608486031215611a4657600080fd5b8335611a51816118de565b92506020840135611a61816118de565b929592945050506040919091013590565b600060208284031215611a8457600080fd5b8135611865816118de565b600080600060608486031215611aa457600080fd5b8335611aaf816118de565b9250602084013567ffffffffffffffff811115611acb57600080fd5b611ad7868287016119af565b925050604084013567ffffffffffffffff811115611a1b57600080fd5b60008060408385031215611b0757600080fd5b8235611b12816118de565b915060208301358015158114611b2757600080fd5b809150509250929050565b60008060008060808587031215611b4857600080fd5b8435611b53816118de565b93506020850135611b63816118de565b925060408501359150606085013567ffffffffffffffff811115611b8657600080fd5b8501601f81018713611b9757600080fd5b611ba687823560208401611935565b91505092959194509250565b60008060408385031215611bc557600080fd5b8235611bd0816118de565b91506020830135611b27816118de565b602080825282518282018190526000918401906040840190835b81811015611c18578351835260209384019390920191600101611bfa565b509095945050505050565b600181811c90821680611c3757607f821691505b602082108103611c5757634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215611c6f57600080fd5b8151611865816118de565b634e487b7160e01b600052601160045260246000fd5b600060018201611ca257611ca2611c7a565b5060010190565b601f82111561074757806000526020600020601f840160051c81016020851015611cd05750805b601f840160051c820191505b818110156112105760008155600101611cdc565b815167ffffffffffffffff811115611d0a57611d0a61191f565b611d1e81611d188454611c23565b84611ca9565b6020601f821160018114611d525760008315611d3a5750848201515b600019600385901b1c1916600184901b178455611210565b600084815260208120601f198516915b82811015611d825787850151825560209485019460019092019101611d62565b5084821015611da05786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b60006040828403128015611dd857600080fd5b506040805190810167ffffffffffffffff81118282101715611dfc57611dfc61191f565b6040528251611e0a816118de565b81526020928301519281019290925250919050565b818103818111156103be576103be611c7a565b634e487b7160e01b600052603160045260246000fd5b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611e7b9083018461186c565b9695505050505050565b600060208284031215611e9757600080fd5b81516118658161183256fe645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed02a26469706673582212200f525e5e5ddb17faeebc6d52a682d841ac2e8e1ebdb172a34b60b9f28202094264736f6c634300081a0033";

type ApplicationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ApplicationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Application__factory extends ContractFactory {
  constructor(...args: ApplicationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<Application> {
    return super.deploy(overrides || {}) as Promise<Application>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Application {
    return super.attach(address) as Application;
  }
  override connect(signer: Signer): Application__factory {
    return super.connect(signer) as Application__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ApplicationInterface {
    return new utils.Interface(_abi) as ApplicationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Application {
    return new Contract(address, _abi, signerOrProvider) as Application;
  }
}
