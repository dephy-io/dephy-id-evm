/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PublicVendor, PublicVendorInterface } from "../PublicVendor";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "initialOwner",
        type: "address",
        internalType: "address",
      },
      {
        name: "productFactoryAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createActivatedDevice",
    inputs: [
      {
        name: "product",
        type: "address",
        internalType: "address",
      },
      {
        name: "device",
        type: "address",
        internalType: "address",
      },
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createActivatedDevices",
    inputs: [
      {
        name: "product",
        type: "address",
        internalType: "address",
      },
      {
        name: "devices",
        type: "address[]",
        internalType: "address[]",
      },
      {
        name: "receivers",
        type: "address[]",
        internalType: "address[]",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "createProduct",
    inputs: [
      {
        name: "productImpl",
        type: "address",
        internalType: "address",
      },
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "symbol",
        type: "string",
        internalType: "string",
      },
      {
        name: "baseTokenURI",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "owner",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "productFactory",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "contract IProductFactory",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "renounceOwnership",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferOwnership",
    inputs: [
      {
        name: "newOwner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "event",
    name: "OwnershipTransferred",
    inputs: [
      {
        name: "previousOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "newOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "OwnableInvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "OwnableUnauthorizedAccount",
    inputs: [
      {
        name: "account",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161099d38038061099d83398101604081905261002f916100fa565b816001600160a01b03811661005e57604051631e4fbdf760e01b81526000600482015260240160405180910390fd5b6100678161008e565b50600180546001600160a01b0319166001600160a01b03929092169190911790555061012d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b03811681146100f557600080fd5b919050565b6000806040838503121561010d57600080fd5b610116836100de565b9150610124602084016100de565b90509250929050565b6108618061013c6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063888ab5281161005b578063888ab528146100b25780638da5cb5b146100c5578063f2fde38b146100ee578063f62eb4171461010157600080fd5b80631e7054b3146100825780636de2973014610097578063715018a6146100aa575b600080fd5b610095610090366004610490565b610114565b005b6100956100a53660046105c3565b6101b6565b610095610240565b6100956100c036600461063e565b610254565b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6100956100fc366004610689565b610304565b6001546100d2906001600160a01b031681565b61011c610347565b600154604080516080810182526001600160a01b038781168252602082018790528183018690526060820185905291516205943360e31b81529190921691622ca1989161016c91906004016106f3565b6020604051808303816000875af115801561018b573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101af9190610765565b5050505050565b6101be610347565b600154604080516060810182526001600160a01b038681168252602082018690528183018590529151634be60db360e01b81529190921691634be60db39161020991906004016107c7565b600060405180830381600087803b15801561022357600080fd5b505af1158015610237573d6000803e3d6000fd5b50505050505050565b610248610347565b6102526000610374565b565b61025c610347565b600154604080516060810182526001600160a01b038681168252858116602083019081528582168385019081529351631595406d60e21b8152925182166004840152518116602483015291518216604482015291169063565501b4906064016020604051808303816000875af11580156102da573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102fe9190610812565b50505050565b61030c610347565b6001600160a01b03811661033b57604051631e4fbdf760e01b8152600060048201526024015b60405180910390fd5b61034481610374565b50565b6000546001600160a01b031633146102525760405163118cdaa760e01b8152336004820152602401610332565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461034457600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610418576104186103d9565b604052919050565b600082601f83011261043157600080fd5b813567ffffffffffffffff81111561044b5761044b6103d9565b61045e601f8201601f19166020016103ef565b81815284602083860101111561047357600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080608085870312156104a657600080fd5b84356104b1816103c4565b9350602085013567ffffffffffffffff8111156104cd57600080fd5b6104d987828801610420565b935050604085013567ffffffffffffffff8111156104f657600080fd5b61050287828801610420565b925050606085013567ffffffffffffffff81111561051f57600080fd5b61052b87828801610420565b91505092959194509250565b600082601f83011261054857600080fd5b813567ffffffffffffffff811115610562576105626103d9565b8060051b610572602082016103ef565b9182526020818501810192908101908684111561058e57600080fd5b6020860192505b838310156105b95782356105a8816103c4565b825260209283019290910190610595565b9695505050505050565b6000806000606084860312156105d857600080fd5b83356105e3816103c4565b9250602084013567ffffffffffffffff8111156105ff57600080fd5b61060b86828701610537565b925050604084013567ffffffffffffffff81111561062857600080fd5b61063486828701610537565b9150509250925092565b60008060006060848603121561065357600080fd5b833561065e816103c4565b9250602084013561066e816103c4565b9150604084013561067e816103c4565b809150509250925092565b60006020828403121561069b57600080fd5b81356106a6816103c4565b9392505050565b6000815180845260005b818110156106d3576020818501810151868301820152016106b7565b506000602082860101526020601f19601f83011685010191505092915050565b602080825282516001600160a01b0316828201528201516080604083015260009061072160a08401826106ad565b90506040840151601f1984830301606085015261073e82826106ad565b9150506060840151601f1984830301608085015261075c82826106ad565b95945050505050565b60006020828403121561077757600080fd5b81516106a6816103c4565b600081518084526020840193506020830160005b828110156107bd5781516001600160a01b0316865260209586019590910190600101610796565b5093949350505050565b602080825282516001600160a01b031682820152820151606060408301526000906107f56080840182610782565b90506040840151601f1984830301606085015261075c8282610782565b60006020828403121561082457600080fd5b505191905056fea26469706673582212202efb6a6d427711928df32146f0505f8e94c561c31679c8d955e57bc2c80dce4f64736f6c634300081a0033";

type PublicVendorConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PublicVendorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PublicVendor__factory extends ContractFactory {
  constructor(...args: PublicVendorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    initialOwner: string,
    productFactoryAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<PublicVendor> {
    return super.deploy(
      initialOwner,
      productFactoryAddress,
      overrides || {}
    ) as Promise<PublicVendor>;
  }
  override getDeployTransaction(
    initialOwner: string,
    productFactoryAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(
      initialOwner,
      productFactoryAddress,
      overrides || {}
    );
  }
  override attach(address: string): PublicVendor {
    return super.attach(address) as PublicVendor;
  }
  override connect(signer: Signer): PublicVendor__factory {
    return super.connect(signer) as PublicVendor__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PublicVendorInterface {
    return new utils.Interface(_abi) as PublicVendorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PublicVendor {
    return new Contract(address, _abi, signerOrProvider) as PublicVendor;
  }
}
